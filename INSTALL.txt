.. This document is formatted using the ReST syntax.

=================================
 Aegir Installation Instructions
=================================

------------------------------------------------------------------------------------------------------------------
 This document describes briefly how to install a multi-platform, single-server Aegir Drupal provisionning system.
------------------------------------------------------------------------------------------------------------------


Aegir requirements
==================

This section describes what is expected of the servers Aegir is running
on.

Aegir must run some UNIX flavour because the majority of functionality
in this system occurs in the back-end, through command line scripting.
There are also several features (such as symlinks), that are not
available to users on Windows. There are no plans currently to add
windows support.

The level of access required to be able to configure this system is
very far beyond what is commonly available to users with shared hosting.

Following instructions will provide example commands for a Debian-like
distribution. They are assumed to be run as root user. Prefix them with
sudo if you are working with a privileged user instead of root.


Web server
----------

You will need at least one dedicated web server, running Apache. We
generally work with Apache 2 but we should be compatible with the 1.x
series. You will need root access to that server and the server must
be reserved for Aegir. Sharing the server with other control panels
such as Cpanel, Plesk or AlternC will very likely create problems and
is not supported.

Shell commands::

 apt-get install apache2


PHP 5.2
-------

Since Aegir strongly depends on Drush, we therefore depend on PHP 5.2
or above. You also need to have the commandline version of PHP to run
Drush properly and the MySQL extensions.

Shell commands::

 apt-get install php5 php5-cli php5-mysql


Database server
---------------

You will require a database server, obviously. Aegir currently only 
supports MySQL. It is preferable to use a dedicated server since Aegir 
will create database users and will require a privileged user.

Shell commands::

 apt-get install mysql-server


Mail transfer agent
-------------------

Aegir requires an MTA (Mail Transfer Agent) installed on your webserver
in order to be able to install new sites to your new platform. If you
don't have an MTA, the site installation will fail with message like
"could not send email". Additional messages will show that site has been
removed because of this problem. To remedy the situation simply install
an MTA like sendmail, postfix, or exim and do the minimal configuration.

Shell commands::

 apt-get install postfix


CVS commands
------------

Aegir installs itself via a drush_make file that downloads via CVS (by using given tags).
If you don't have the cvs program you will need to install it on the server.

Shell commands::

 apt-get install cvs


Aegir user
----------

The provision framework of Aegir requires that the scripts run as a 
non-root system account, to ensure that it can correctly set the file
permissions on the hosted files. 

Also to ensure that the file permissions of the hosted sites are
always as safe as can be, and especially to make sure that the web
server does not have the ability to modify the code of the site, the
configured system account needs to be a member of the web server group,
in order to be able to correctly set the file permissions.

More detailed instructions on this topic will be given later in the web 
installation wizard.

This document assumes the Aegir user is ``aegir``, its home directory is
``/var/aegir`` and the webserver group is ``www-data``. You can choose
another username if desired.

In addition we will create a directory layout for Aegir configuration
and backups.

Shell commands::

 adduser --system --group --home /var/aegir aegir
 adduser aegir www-data    #make aegir a user of group www-data
 mkdir -p /var/aegir/config/vhost.d
 mkdir -p /var/aegir/backups
 chmod 0711 /var/aegir/config
 chmod 0700 /var/aegir/backups
 chown -R aegir /var/aegir/*


Aegir installation instructions
===============================

This section deals with the installation of Aegir proper. These
instructions limit themselves to getting you into the Aegir install wizard,
which will then give you further configuration instructions.

All instructions and in general all commands must be run as aegir user,
so all permissions are always set correctly.

To become aegir user you can issue this command::

  su -s /bin/sh aegir

(Note you must run this as root or prefix with sudo).

Note that /bin/sh is an example. You may wish to instead use the shell
of your choice, i.e /bin/bash

Additionally to make following instructions generic and not dependant on
a concrete Drupal or Aegir version, we will use bash environment
variables. The current Aegir release is 0.4-alpha2.

You should replace the following command for the most current versions 
at the time you are reading this document.

Shell commands::

  export AEGIR_TAG=DRUPAL-6--0-4-ALPHA2
  export HOSTMASTER_DIR=hostmaster-0.4-alpha2


Installing drush 2.0
--------------------

At the time of writing, the current drush stable version is 2.0.
In the event a newer version exists and this document has not been
updated, you should use the latest stable version of the 2.x branch.

Shell commands::

 cd /var/aegir
 wget http://ftp.drupal.org/files/projects/drush-All-Versions-2.0.tar.gz
 tar -xvzf drush-All-Versions-2.0.tar.gz
 rm drush-All-Versions-2.0.tar.gz
 mkdir .drush

Drush is now downloaded to /var/aegir/drush. It is not in the system
path, so we must explicitly call it by using the complete path. 
We have also created the /var/aegir/.drush folder to put inside drush
commands that will only be available to Aegir's user. Please refer to 
the Drush documentation if needed, which will teach you more about 
these and other configuration instructions.


Installing drush_make
---------------------

Aegir uses makefiles to work with drush_make and automate the
installation of components. This drastically reduces the amount of manual 
downloads to perform, and also makes some Aegir components detect and install
compatible versions of other components.

Shell commands::

 drush/drush dl drush_make --destination=.drush


Downloading provision framework
-------------------------------

The provision framework is not a drupal module but a drush extension, 
and it *must* always be run as Aegir's user to avoid further permission
problems. So we will place it in ``/var/aegir/.drush`` to ensure that.

Shell commands::

 export CVSROOT=:pserver:anonymous:anonymous@cvs.drupal.org:/cvs/drupal
 cvs co -d .drush/provision -r$AEGIR_TAG contributions/modules/provision


Downloading the front end components
------------------------------------

As stated above, Aegir now uses makefiles to download the components.

Provision framework ships with aegir.make, which is responsible for
downloading Drupal core and the Hostmaster profile.

Hostmaster profile also ships with another makefile, hostmaster.make,
which will download required and optional components for Aegir.

Shell commands::

 drush/drush hostmaster make $HOSTMASTER_DIR


Prepare the Hostmaster drupal site
----------------------------------

We are almost ready to install the Hostmaster drupal site using the installation
profile. 

It is recommended that you create the aegir site as a real site in the
sites/ directory instead of using sites/default. The following commands will
create this site directory and create the settings.php and files directory with
the appropriate permissions to proceed through the installer later.

These instructions assume you are installing Aegir in ``$AEGIR_DOMAIN``,
where ``AEGIR_DOMAIN = aegir.example.com``.

Shell commands::

 export AEGIR_DOMAIN=aegir.example.com 
 cd $HOSTMASTER_DIR
 mkdir sites/$AEGIR_DOMAIN
 cp sites/default/default.settings.php sites/$AEGIR_DOMAIN/settings.php
 chmod g+w sites/$AEGIR_DOMAIN/settings.php
 mkdir sites/$AEGIR_DOMAIN/files
 chmod 2770 sites/$AEGIR_DOMAIN/files
 chgrp www-data sites/$AEGIR_DOMAIN/settings.php
 chgrp www-data sites/$AEGIR_DOMAIN/files


Apache configuration
--------------------

Aegir VirtualHosts for Apache are stored in ``/var/aegir/config/vhost.d``
(if you have not changed default locations). 

Hostmaster provides an example virtualhost for apache. Copy it to Aegir's
virtual hosts directory and **modify** it to suit your needs,
particularly the path leading to the Drupal core ($HOSTMASTER_DIR in the
examples above).

Shell commands::

 cp profiles/hostmaster/apache2.conf.txt ../config/vhost.d/$AEGIR_DOMAIN
 # edit and configure


In addition, Rewrite module must be enabled and also Apache must be given a
directive to include Aegir's vhosts path, to read configurations from there. 
In Debian-based systems you can put a file inside ``/etc/apache2/conf.d`` that
will be parsed on startup or alternatively you can place the directive in
apache.conf / httpd.conf. We prefer the former. In other systems there are
similar ways to accomplish this. Consult your OS's documentation if unsure.

Shell commands as root::

 a2enmod rewrite
 echo "Include /var/aegir/config/vhost.d/" > /etc/apache2/conf.d/aegir
 /etc/init.d/apache2 restart


Database configuration
----------------------

Here you want to make a basic database configuration for the Drupal site
you are going to install. You want to run these commands using your
mysql 'root' user.

SQL commands::

 CREATE DATABASE aegir;
 GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, \
  CREATE TEMPORARY TABLES, LOCK TABLES ON aegir.* TO \
  'aegir'@'localhost' IDENTIFIED BY 'XXXXXXXX';


DNS Configuration
-----------------

Configuring DNS is up to you. Currently Aegir does nothing with DNS. 

As a help trick, if you are installing Aegir locally to try and test it,
you can do local DNS by adding entries to file ``/etc/hosts``. First
line of this file looks like:

``127.0.0.1  localhost your-machine-name``

Simply add all domains you want to this line. e.g:

``127.0.0.1  localhost your-machine-name $AEGIR_DOMAIN other1 other2``


Checkpoint!
-----------

At this point, you have checked out all the code and setup your basic
Drupal system (Drupal core, hosting, hostmaster and eldir) that will be the
Aegir frontend and the backend system (provision and drush). Your
filesystem layout should look something like this::

 /var/aegir/hostmaster-0.x/
 /var/aegir/hostmaster-0.x/profiles/hostmaster/
 /var/aegir/hostmaster-0.x/profiles/hostmaster/modules/hosting/
 /var/aegir/hostmaster-0.x/profiles/hostmaster/modules/install_profile_api/
 /var/aegir/hostmaster-0.x/profiles/hostmaster/modules/admin_menu/
 /var/aegir/hostmaster-0.x/profiles/hostmaster/themes/eldir/
 /var/aegir/hostmaster-0.x/sites/aegir.example.com/
 /var/aegir/config/vhost.d/
 /var/aegir/backups/
 /var/aegir/drush/drush.php
 /var/aegir/.drush/provision/

Variations on this are acceptable (for example, the Drush Debian
package works out of ``/usr/bin/drush`` and that's fine), but you are
better to stick with those if you really want to get through this. The
remaining of the documentation here will assume that layout.


Follow the wizard
-----------------

Now point your browser to http://$AEGIR_DOMAIN/install.php and proceed
with the remainder of the installation using the Hostmaster Install profile.
Some of the instructions given, you will already have completed, but carefully
read each step in turn to ensure you don't miss anything.
Specifically you must still provide the database credentials, add the Aegir user
to /etc/sudoers with the relevant command to restart Apache, create a MySQL
superuser capable of creating more databases, and initialise the hosting system.
These instructions are provided to you by the Hostmaster install profile.

