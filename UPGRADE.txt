.. This document is formatted using the ReST syntax.

==========================
Aegir Upgrade Instructions
==========================

-----------------------------------------------------------------------------
This document describes briefly how to upgrade an existing Aegir installation
-----------------------------------------------------------------------------

Conventions and tips
====================

All instructions and in general all commands must be run as aegir user,
so all permissions are always set correctly.

To become aegir user you can issue this command::

  su -s /bin/sh aegir

(Note you must run this as root or prefix with sudo).

Note that /bin/sh is an example. You may wish to instead use the shell
of your choice, i.e /bin/bash

Additionally to make following instructions generic and not dependant on
a concrete Drupal or Aegir version, we will use shell environment
variables. Since 0.4, the hostmaster platform is prepended with 'hostmaster'
so as not to clash with any other Drupal platforms. If you are upgrading from
Aegir version 0.3, your hostmaster platform may be called 'drupal-6.14'.

You should replace the following variables for current versions at the time
you are reading this document.

Shell commands::

  export AEGIR_VERSION=HEAD
  export DRUPAL_DIR=/var/aegir/hostmaster-$AEGIR_TAG
  export OLD_DRUPAL_DIR=/var/aegir/drupal-6.14
  export DRUSH_VERSION=6.x-3.0-alpha1.tar.gz
  export DRUSH_MAKE_VERSION=6.x-2.0-beta6

This document also assumes drush is installed properly and we use an
environment variable to simplify the documentation again.

Shell commands::

  export DRUSH='php /var/aegir/drush/drush.php'

As of the 0.4-alpha3 release, 'unzip' is a required dependency on your 
server in order to successfully extract the jquery.ui library that is
part of some UI improvements. On Debian, this means:

Shell commands::

 apt-get install unzip

If you intend on upgrading your system to the bleeding edge version of the
code from our git repositories, you will need the git program installed.
On Debian, this means:

Shell commands::

 apt-get install git-core

Generic upgrade instructions
============================

We aim to create a generic upgrade process that will be consistent
across versions. This section describes this process. However, there
are version-specific upgrade instructions that may be more relevant to
your installation in the next section.

Upgrading the backend
---------------------

In general, we try to keep the backend and the frontend compatible
with each other during release cycles. That is: provision 0.3 and
hosting 0.3 will always be able to talk to each other. hosting 0.2 was
able to talk to provision 0.3 too, but the API is not well enough
defined so that can be counted upon.

Therefore, you want to keep the frontend and the backend in sync. When
you do a major upgrade (e.g. 0.3 -> 0.4) of the backend, you *must*
upgrade the frontend soon after.

Bottomline: first you upgrade the backend, then the frontend.

Upgrading the backend is as simple as installing a new version of
Drush and Provision over the old ones.

Keep a copy of the old Provision and Drush in case something goes wrong 
in the frontend.

Shell commands::

  cd /var/aegir
  mv drush drush.bak
  wget http://ftp.drupal.org/files/projects/drush-$DRUSH_VERSION.tar.gz 
  gunzip -c drush-$DRUSH_VERSION.tar.gz | tar -xf -
  rm drush-$DRUSH_VERSION.tar.gz
  cd /var/aegir/.drush
  mv provision ../provision.bak
  wget http://files.aegirproject.org/provision-$AEGIR_VERSION.tgz
  gunzip -c provision-$AEGIR_VERSION.tgz | tar -xf -
  rm provision-$AEGIR_VERSION.tgz

Provision 0.4 has added a new dependency on drush_make, which will also
need to be installed to upgrade the front end if you are upgrading from
a pre-0.4 release.

If you are upgrading from an earlier 0.4 release, replace your copy of
drush_make with the latest recommended release.

Shell commands::

  $DRUSH dl drush_make-$DRUSH_MAKE_VERSION --destination='/var/aegir/.drush'

Upgrading the frontend
----------------------

These are generic instructions to upgrade your hosting, hostmaster,
eldir or Drupal core installation to new versions. As of 0.4 this process
has largely been automated, and will be able to upgrade 0.3 and any of
the 0.4 development releases to the latest applicable versions.

Once you have upgraded the backend, and you have installed drush_make
you will need to run the hostmaster migrate command.


Shell commands::

  cd $OLD_DRUPAL_DIR
  $DRUSH hostmaster-migrate aegir.example.com $DRUPAL_DIR

The directory specified must be an absolute path to where you want
the new release to be stored. If the directory does not exist, provision
will use drush_make to fetch and assemble the correct version of the front
end for the specific release of the backend you are running.

This command will completely replace the crontab entry for the aegir user,
and asks for confirmation before it does so. If you do not confirm, the process
will be halted as it is necessary for the task queue to be processed.

The command above will fetch the latest stable Drupal release, so it can simply
be run again when a new security release of Drupal is made available.

