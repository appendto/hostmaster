<?php

function hosting_migrate_provision_args($node, $task) {
  $values = array();
  if ($node->type == 'task') {
    if ($task == 'migrate') {
      $platform = node_load($node->task_args['target_platform']);
      $values['#2'] = $platform->publish_path;
    }
  }
  return $values;
}


function hosting_migrate_hosting_tasks($node) {
  $options = array();

  if ($node->type == 'site') {
    if (hosting_task_outstanding($node->nid, 'enable') || ($node->site_status & HOSTING_SITE_ENABLED)) {
      $options['migrate'] = array(
        'title' => t('Migrate'),
        'description' => t('Move the site to a new platform.'),
        'weight' => 7
      );
    }
  }
  return $options;
}

function theme_hosting_task_migrate_form(&$form) {
  $node = $form['#node'];
  $packages = $form['#packages'];
  $headers = array();
  $rows = array();

  $headers[] = t("Package");
  $set_header = array();
  foreach (array_keys($packages[$node->platform]) as $package) {
    $row = array();
    $row[] = array('class' => 'hosting-package-name', 'data' => $packages[$node->platform][$package]->title . ' ' . $packages[$node->platform][$package]->package_type);
    foreach (array_keys($packages) as $platform) {
      if (!in_array($platform, $set_header)) {
        $set_header[] = $platform;
        $headers[] = drupal_render($form['radios'][$platform]['target_platform']);
      }
      if (array_key_exists($package, $packages[$platform])) {
        $comparison = hosting_package_instance_version_compare($packages[$node->platform][$package], $packages[$platform][$package]);
        $display = $packages[$platform][$package]->version;
        if ($packages[$platform][$package]->schema_version) {
          $display .= " (" . $packages[$platform][$package]->schema_version . ")";
        }
        if ($comparison > 0) {
          $row[] = array('class' => 'hosting-package-upgrade', 'data' => $display);
        }
        elseif ($comparison == 0) {
          $row[] = array('class' => 'hosting-package-same', 'data' => $display);
        }
        else {
          $row[] = array('class' => 'hosting-package-downgrade', 'data' => $display);
        }
      }
      else {
        $row[] = array('class' => 'hosting-package-missing', 'data' => t("Missing"));
      }
    }
    $rows[] = $row;
  }
  $output .= "<div class='hosting-package-comparison'>" . theme('table', $headers, $rows) . "</div>";

  $output .= drupal_render($form);
  return $output;
}

function hosting_task_migrate_form($node) {
  $site_instances = hosting_package_instances_load(
    array('rid' => $node->nid, 'i.status' => 1));

  $cols = array();

  $packages = array();
  $form['radios']['#tree'] = false;
  $form['radios'][$node->platform]['target_platform'] = array(
    '#type' => 'radio',
    '#title' => t('Current'),
    '#default_value' => $node->platform,
    '#disabled' => TRUE,
    "#return_value" => $node->platform,
  );
  foreach ($site_instances as $instance) {
    $packages[$node->platform][$instance->package_id] = $instance;
  }


  $profile_platform_instances = hosting_package_instances_load(
    array('r.type' => 'platform', 'n.nid' => $node->profile));
  if (sizeof($profile_platform_instances) <= 1) {
    $form['no_targets'] = array(
      '#value' => t('<br />There are no platforms that can meet the depdendencies for this site'));
    return $form;
  }
  foreach ($profile_platform_instances as $profile_instance) {
    if ($profile_instance->rid != $node->platform) {
      $platform = node_load($profile_instance->rid);
      $form['radios'][$platform->nid]['target_platform'] = array(
        '#type' => 'radio',
        '#title' => $platform->title,
        "#return_value" => $platform->nid,
      );

      $platform_instances = hosting_package_instances_load(
        array('rid' => $profile_instance->iid));
      foreach ($platform_instances as $instance) {
        $packages[$platform->nid][$instance->package_id] = $instance;
      }
    }
  }
  $form['#node'] = $node;
  $form['#packages'] = $packages;
  $form['#theme'] = 'hosting_task_migrate_form';
  return $form;
  $table = array();

  if (sizeof($options)) {
    $form['target_platform'] = array(
      '#type' => 'radios',
      '#title' => t('Migrate to'),
      '#options' => $options,
      '#required' => TRUE
    );
  }
  else {
    $form['target_text'] = array('#type' => 'item',
      '#value' => t('<strong>No valid platforms to migrate to.</strong>')
    );
  }
  return $form;
}


function hosting_migrate_hosting_post_migrate($task, $data) {
  $ref = node_load($task->rid);
  if ($ref->type == 'site') {
    $target = $task->task_args['target_platform'];
    $ref->platform = $target;
    node_save($ref);
  }
}
