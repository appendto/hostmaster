<?php

include_once('hosting_db_server.help.inc');


/**
 * Implementation of hook_hosting_service()
 *
 * @see hosting_help_requirements()
 */
function hosting_db_server_hosting_service() {
  return array("db" => array(
    'title' => t("Database server"),
    'type' => 'Mysql',
    'class' => 'hostingService_DB',
    'module' => 'hosting_db_server',
    'file' => 'hosting_db_server.service.inc'
  ));
}



/**
 * Find the database server()
 */
function hosting_get_db_server($hostname, $web_server = null) {
  if (_hosting_valid_ip($hostname)) {
    $ip = $hostname;
    $hostname = gethostbyaddr($hostname);
  }
  else {
    $ip = gethostbyname($hostname);
  }
  $result = db_result(db_query("SELECT nid FROM {node} WHERE title in ('%s', '%s') and type='server'", $ip, $hostname));
  if ($result) {
    return node_load($result);
  }

  return false;
}

/**
 * Populate a database URL string
 */
function hosting_db_server_as_url($nid) {
  $node = node_load($nid);
  return sprintf("%s://%s:%s@%s", $node->db_type, urlencode($node->db_user), urlencode($node->db_passwd), urlencode($node->title));
}

/**
 * Implementation of hook_hosting_feature()
 */
function hosting_db_server_hosting_feature() {
  $features['db_server'] = array(
    'title' => t('Database servers'),
    'description' => t('Configure and maintain multiple database servers.'),
    'status' => HOSTING_FEATURE_DISABLED,
    'node' => 'db_server',
  'group' => 'experimental');
  return $features;

}
/**
 * Small helper function to get web servers.
*/ 
function _hosting_get_db_servers() {
  $return = array();
  $result = db_query("SELECT n.nid, n.title FROM {node} n LEFT JOIN {hosting_db_server} w ON n.vid=w.vid WHERE n.type='server' AND n.status=1");
  while($server = db_fetch_object($result)) {
    $return[$server->nid] = $server->title;
  }
  return $return;
}


/**
 * Implementation of hook_nodeapi() presave for server node type.
 */
function hosting_db_server_nodeapi_server_presave(&$node) {
  if (empty($node->db_passwd) && $node->nid) {
    $old = node_load($node->nid);
    $node->db_passwd = $old->db_passwd;
  }
}

/**
 * Views integration
 */
function hosting_db_server_views_api() {
  return array(
    'api' => 2, 
    'path' => drupal_get_path('module', 'hosting_db_server'),
  );
}

