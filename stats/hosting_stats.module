<?php

function hosting_stats_provision_args($node, $task) {
  $args = array();
  if ($task == 'stats') {
    $args['load-provision-stats'] = TRUE;
  }
  return $args;
}

function hosting_stats_hosting_queues() {
  $queue['stats'] = array(
    'name' => t('Statistics queue'),
    'description' => 'Fetch and import statistics for hosted sites.',
    'type' => 'batch',
    'total_items' => hosting_site_count(),
    'threshold' => 20,
    'max_threads' => 48,
    'min_threads' => 24,
    'frequency' => strtotime("6 hours", 0),
    'singular' => t('site'),
    'plural' => t('sites'),
  );

  return $queue;
}

function hosting_stats_queue($count) {
  $sites = hosting_stats_get_sites($count);
  foreach ($sites as $site) {

    $cmd = hosting_generate_command("provision", "stats", $site, array(), array('backend' => TRUE));
    exec($cmd, $code, $return);
    
    $data = unserialize(implode("\n", $return));
    $site->revision = false;
    $site->last_stats = mktime();
    $site->no_synch = true;
    node_save($site);
    foreach (module_implements("hosting_stats") as $module) {
      module_invoke("hosting_stats", $site->nid, $data['stats']);
    }
  }
}

function hosting_stats_nodeapi(&$node, $op, $a3 = null) {
  if ($node->type == 'site') {
    switch ($op) {
      case 'update' :
        db_query("DELETE FROM {hosting_site_stats} WHERE nid=%d", $node->nid);
        db_query("INSERT INTO {hosting_site_stats} VALUES (%d, %d)", $node->nid, $node->last_stats);
        break;
      case 'load' :
        $node->last_stats = db_result(db_query("SELECT last_stats FROM {hosting_site_stats} WHERE nid=%d", $node->nid));
      case 'view':
        if (!$a3) {
          $node->content['info']['last_stats'] = array(
            '#type' => 'item',
            '#title' => t('Statistics generated'),
            '#weight' => 20,
            '#value' => hosting_format_interval($node->last_stats)
          );
        }
        break;
    }
  }
}

function hosting_stats_get_sites($limit = 5) {
  $result = db_query("SELECT n.nid FROM {node} n LEFT JOIN {hosting_site_stats} s ON n.nid=s.nid WHERE n.type='site' ORDER BY s.last_stats ASC, n.nid ASC limit %d", $limit);
  while ($nid = db_fetch_object($result)) {
    $sites[$nid->nid] = node_load($nid->nid);
  }
  return $sites;
}
