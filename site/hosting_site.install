<?php
// $Id$

function hosting_site_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql' :
    case 'mysqli' :
      db_query("CREATE TABLE {hosting_site} (
        vid int(10) unsigned NOT NULL default '0',
        nid int(10) unsigned NOT NULL default '0',
        client int(11) NOT NULL default '0',
        db_server int(11) NOT NULL default '0',
        platform int(11) NOT NULL default '0',
        profile int(11) NOT NULL default '0',
        language VARCHAR(10) NOT NULL default 'en',
        last_cron int(10) default NULL,
        status tinyint NOT NULL default '0',
        PRIMARY KEY  (vid)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      db_query("CREATE TABLE {hosting_site_backups} (
        bid int(10) unsigned NOT NULL,
        site int(10) NOT NULL default '0',
        web_server int(10) NOT NULL default '0',
        description longtext,
        filename longtext,
        timestamp int(11) default NULL,
        PRIMARY KEY  (bid)    
        ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      break;
   }
}

/**
 * Add language field to hosting_sites table
 */
function hosting_site_update_1() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {hosting_site} ADD COLUMN language VARCHAR(10) NOT NULL default 'en'");
  return $ret;
}

/**
 * Retry all failed site installs, to evaluate where they might be successfully imported instead
 */
function hosting_site_update_2() {
  include_once( drupal_get_path('module', 'hosting_task') . '/hosting_task.module');
  $ret = array();
  $result = db_query("select n.nid from {node} n left join {hosting_task} t on n.vid = t.vid where t.task_type = 'install' and t.task_status > 1 and n.type='task'");
  while ($obj = db_fetch_object($result)) {
    hosting_task_retry($obj->nid);
  }
  return $ret;
}

/**
 * Move away from bitmasks for the status field.
 */
function hosting_site_update_3() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {hosting_site} CHANGE COLUMN status status int(11) NOT NULL default '0'");

  $ret[] = update_sql("CREATE TEMPORARY TABLE {hosting_site_statuses} SELECT nid, 
    (status&4) as deleted, NOT (status&2) AS disabled, status&1 AS installed FROM {hosting_site}");


  // Reset them all to queued
  $ret[] = update_sql("UPDATE {hosting_site} SET status = 0");

  // First, we get rid of the deleted sites.
  $ret[] = update_sql("UPDATE {hosting_site} SET status = -2 WHERE nid in (SELECT nid FROM {hosting_site_statuses} WHERE deleted > 0)");
  $ret[] = update_sql("DELETE FROM {hosting_site_statuses} WHERE deleted > 0");

  // Then the disabled sites.
  $ret[] = update_sql("UPDATE {hosting_site} SET status = -1 WHERE nid in (SELECT nid FROM {hosting_site_statuses} WHERE disabled > 0)");
  $ret[] = update_sql("DELETE FROM {hosting_site_statuses} WHERE disabled > 0");

  // Then the installed sites, which are the same as 'enabled' sites.
  $ret[] = update_sql("UPDATE {hosting_site} SET status = 1 WHERE nid in (SELECT nid FROM {hosting_site_statuses} WHERE installed > 0)");
  $ret[] = update_sql("DELETE FROM {hosting_site_statuses} WHERE installed > 0");

  $ret[] = update_sql("DROP TABLE {hosting_site_statuses}");

  // Now we rid ourself of 'enabled', we really care about installed.
  return $ret;
}
