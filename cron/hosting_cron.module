<?php

function hosting_cron_hosting_queues() {
  $items['cron'] = array(
    'name' => t('Cron queue'),
    'description' => t('Run cron on hosted sites.'),
    'items' => hosting_site_count(),
    'frequency' => strtotime("1 hour", 0),
    'min_threads' => 6,
    'max_threads' => 12,
    'threshold' => 100
  );
  return $items;
}

function hosting_cron_queue($count) {
  $sites = hosting_cron_get_sites($count);

  foreach ($sites as $site) {
    $cmd = hosting_generate_command("provision", "cron", array(), array('background' => true), $site);
    system($cmd);
    $site->revision = false;
    $site->no_synch = true; // do not generate synch task
    $site->last_cron = mktime();
    node_save($site);
  }
}

function hosting_cron_nodeapi(&$node, $op, $a3 = null) {
  if ($node->type == 'site') {
    switch ($op) {
      case 'view':
        if (!$a3) {
          // @todo : turn it into x minutes ago
          $node->content['last_cron'] = array(
            '#type' => 'item',
            '#title' => t('Cron run'),
            '#value' => ($node->last_cron) ? format_date($node->last_cron, "large") : t('Never') );
        }
        break;
    }
  }
}

function hosting_cron_get_sites($limit = 5) {
  $result = db_query("SELECT n.nid FROM {node} n LEFT JOIN {hosting_site} s ON n.nid=s.nid WHERE n.type='site' ORDER BY s.last_cron ASC, n.nid ASC limit %d", $limit);
  while ($nid = db_fetch_object($result)) {
    $sites[$nid->nid] = node_load($nid->nid);
  }
  return $sites;
}
